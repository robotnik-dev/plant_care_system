name: ci

on: push

env:
  CARGO_TERM_COLOR: always

jobs:
  latest-deps:
    name: Latest Dependencies
    runs-on: ubuntu-22.04-arm
    continue-on-error: true
    env:
      CARGO_RESOLVER_INCOMPATIBLE_RUST_VERSIONS: allow
    steps:
      - uses: actions/checkout@v4
      - run: rustup update stable && rustup default stable
      - run: cargo update --verbose

  test:
    runs-on: ubuntu-22.04-arm
    steps:
      - uses: actions/checkout@v4
      - run: rustup update stable && rustup default stable
      - run: cargo test --verbose

  docker:
    needs: [ latest-deps, test ]
    runs-on: ubuntu-22.04-arm
    strategy:
      matrix:
        service: [ backend, frontend ]
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/${{vars.DOCKERHUB_REPOSITORY_NAME}}:${{matrix.service}}-latest
          file: ${{ matrix.service }}/Dockerfile
          platforms: linux/arm64
          cache-from: type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/${{vars.DOCKERHUB_REPOSITORY_NAME}}:${{matrix.service}}-buildcache
          cache-to: type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/${{vars.DOCKERHUB_REPOSITORY_NAME}}:${{matrix.service}}-buildcache,mode=max
